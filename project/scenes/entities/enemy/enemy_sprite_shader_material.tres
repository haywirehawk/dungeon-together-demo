[gd_resource type="ShaderMaterial" load_steps=2 format=3 uid="uid://4tckhsjg8d1t"]

[sub_resource type="Shader" id="Shader_2we7b"]
resource_local_to_scene = true
code = "shader_type canvas_item;

uniform float percent : hint_range(0.0, 1.0, 0.1);
uniform vec4 outline_color : source_color;
uniform vec4 modulate_color: source_color = vec4(1.0);

void fragment(){
	float size_x = 1.0/float(textureSize(TEXTURE, 0).x);
	float size_y = 1.0/float(textureSize(TEXTURE, 0).y);
	vec4 sprite_color = texture(TEXTURE, UV) * modulate_color;
	float alpha = -8.0 * sprite_color.a;
	alpha += texture(TEXTURE, UV + vec2(size_x, 0)).a;
	alpha += texture(TEXTURE, UV + vec2(-size_x, 0)).a;
	alpha += texture(TEXTURE, UV + vec2(0, size_y)).a;
	alpha += texture(TEXTURE, UV + vec2(0, -size_y)).a;
	alpha += texture(TEXTURE, UV + vec2(size_x, size_y)).a;
	alpha += texture(TEXTURE, UV + vec2(-size_x, size_y)).a;
	alpha += texture(TEXTURE, UV + vec2(-size_x, -size_y)).a;
	alpha += texture(TEXTURE, UV + vec2(size_x, -size_y)).a;
	vec4 final_color = mix(sprite_color, outline_color, clamp(alpha, 0.0, 1.0));
	vec4 outlined_texture = vec4(final_color.rgb, clamp(abs(alpha) + sprite_color.a, 0.0, 1.0));
	vec4 white_color = vec4(1.0, 1.0, 1.0, outlined_texture.a);
	COLOR = mix(outlined_texture, white_color, percent);
}"

[resource]
resource_local_to_scene = true
shader = SubResource("Shader_2we7b")
shader_parameter/percent = 0.0
shader_parameter/outline_color = Color(0, 0, 0, 1)
shader_parameter/modulate_color = Color(1, 1, 1, 1)
